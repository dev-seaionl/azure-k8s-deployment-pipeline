apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-app
  labels:
    app: springboot-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - name: springboot-app
        image: <your-docker-registry>/<your-repository>:<version-tag> # Replace <version-tag> with specific version
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: prod
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 10 # Wait 10 seconds after the container starts
          periodSeconds: 5       # Check every 5 seconds
          failureThreshold: 3    # Fail after 3 unsuccessful checks
        livenessProbe:
          httpGet:
            path: /actuator/dependency-health # Endpoint that checks dependent service
            port: 8080
          initialDelaySeconds: 15 # Allow dependent service time to start
          periodSeconds: 10       # Check every 10 seconds
          failureThreshold: 3     # Restart after 3 failed checks
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-service
spec:
  selector:
    app: springboot-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: springboot-app-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: springboot-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70 # Scale out when CPU usage is above 70%
